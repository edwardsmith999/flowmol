#=======================================================================
# User definitions
# TJ:
#	Planes code
#	FFT in x-dir & z-dir
#	Compiling the I/O from the ALC directory
#=======================================================================

override NAME = parallel_Couette

F90FILES = data.export_planes.xperiodic.f90 mesh.export.f90 grid.export.f90 data.noglobal_planes.f90 arrayzero.f90 messenger.MPI.noglobal_planes.f90 misc.mpi.f90 mesh.f90 subMesh.f90 grid.f90 dctcoeff.f90 mtgcoeff_planes.f90 inflow.f90 outflow.f90 boundaries_xzperiodic.f90 fluctuations_inlet_top.f90 advance_quick_Fletcher_xQUICK.f90 invert_sgi_openmp_xperiodic.f90 poisson_newmtg_planes_xperiodic.sgi.f90 poisson_fftz_fftx.f90 new_multigrid_planes_ylines_FullMG_xperiodic.f90 projection_step_xperiodic.f90 cfl_control.f90 copyBC.f90 flowAnalysis.f90 statistics.f90 Output_SubDomain.f90 ALC/Input_mod.Z_planes.ALC.xperiodic.f90 ALC/Output_mod.Z_planes.ALC.xperiodic.f90 ALC/Input_Spectra.ALC.f90 ALC/Output_Spectra.ALC.f90 ALC/Input_Stats.ALC.f90 ALC/Output_Stats.ALC.f90 simulation_planes.f90 main_planes.f90

LIBFILES := archive.o library.o library.alc.o SSDfile.memory.o triDiagonal.o triDiagonal.mpi.o pentaDiagonal.o transforms.fftw.hitachi.o SinCosFFT.o triDiagonal.mrhs.o triDiagonal.mpi.mrhs.o pentaDiagonal.mrhs.o pentaDiagonal.mpi.o polyDiagonal.o 

LIBDIR := ./../lib

LIBFILES := $(addprefix $(LIBDIR)/,$(LIBFILES))

# NOTE: On hector one has to use transforms.fftw.hitachi.f90 instead of transforms.mkl_intel.alc.f90

# needed in platform
OBJ_DIR := obj
USE_COUPLER := no

#
# make.inc path, needed because some .inc files contain include statements
#
MAKE_INC_PATH :=  ../../../platforms

include $(MAKE_INC_PATH)/$(PLATFORM).inc

LIBS = -ldfftw -ldrfftw #-L/apps/intel/cmkl/9.0/lib/64/ -lmkl_em64t

#FLAGS =
#F77FILES = 
#CFILES = 

LDFLAGES := $(FFLAGS) $(LIBS)

ifeq ($(strip $(USE_COUPLER)),yes)
  COUPLER_LIB = ../lib/coupler/$(PLATFORM)/$(BUILD)
  FFLAGS  +=  -I$(COUPLER_LIB)
  LDFLAGS +=  -L$(COUPLER_LIB) -lcoupler
endif

#=======================================================================
# Standard definitions
#
OFILES = $(addprefix $(OBJ_DIR)/,$(F90FILES:.f90=.o) $(F77FILES:.f=.o) $(CFILES:.c=.o))

# SGI compilers
# F90 = mpif90 -r8 -O3 -ip -funroll-loops -parallel -par-report3 -mcmodel=large -i-dynamic
#  F90 = mpif90 -r8 -O3 -ip -funroll-loops           -par-report3 -mcmodel=large -i-dynamic

#F77 = f77
#CC = cc
#LD = mpif90 -r8 -O3 -ip -funroll-loops -parallel -par-report3 -mcmodel=large -i-dynamic

#VPATH = obj
.SUFFIXES:
.SUFFIXES: .out .o .f90 .f .c .inc .h

#=======================================================================
# Targets and dependencies
#
default:: opt
all:: a.out
debug:
	@make opt "FLAGS = -g $(FLAGS)"
prof:
	@make opt "LIBS = $(LIBS) -p"
opt:
#	@make all "FLAGS = -r8 -O3 -ip -funroll-loops -parallel -par-report3"
	@make all "FLAGS = -r8 -O3 -ip -funroll-loops           -par-report3"
clean:
	rm -rf obj a.out *.mod
parallel_couette.exe: $(OFILES)
	@echo "$(LD) $(OFILES) $(LIBFILES) $(LIBS) "
	$(LD) $(OFILES) $(LIBFILES) $(LIBS)
$(OFILES): | $(OBJ_DIR) 
$(OBJ_DIR) :
	mkdir -p $@
#obj:
#	mkdir obj
#	mkdir obj/FST_CODES
#	mkdir obj/ALC

$(OBJ_DIR)/%.o : %.f90
	[ -d $(@D) ] || mkdir -p $(@D) ;\
        $(F90) -c $(FPP_FLAGS) $(FFLAGS) $< -o $@

#=======================================================================
# Compilation rules
#
#.f90.o:
#	$(F90) $(FLAGS) -c $*.f90 -o obj/$*.o
#.f.o:
#	$(F77) $(FLAGS) -c $*.f -o obj/$*.o
#.c.o:
#	$(CC) $(FLAGS) -c $*.c -o obj/$*.o

