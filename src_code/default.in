#######################################################################
# This input file has been included for base-case simulation setup, and 
# is designed to be read-only on the version-control server. Please 
# create a copy of this file called 'MD.in' (the default input file name 
# in the main code) if you would like to change the simulation 
# parameters.
# -----------------------------------------------------------------------

#------------------------------------------------------------------------
#########################################################################

			#### ##    ## ########  ##     ## ########    
			 ##  ###   ## ##     ## ##     ##    ##      
			 ##  ####  ## ##     ## ##     ##    ##     
			 ##  ## ## ## ########  ##     ##    ##    
			 ##  ##  #### ##        ##     ##    ##   
			 ##  ##   ### ##        ##     ##    ##  
			#### ##    ## ##         #######     ## 

#########################################################################
#------------------------------------------------------------------------

#########################################################################
# Number density of the particles in the system:
# -----------------------------------------------------------------------
DENSITY
0.8

#########################################################################
# Cut-off distance for particle interaction:
#	2^(1/6) = 1.12246204830937
# -----------------------------------------------------------------------
RCUTOFF
1.12246204830937

#########################################################################
# Define initial temperature of the system:
#	- determines magnitude of initial random velocities
# -----------------------------------------------------------------------
INPUTTEMPERATURE
1.0

#########################################################################
# Initial configuration
#
#    0 - FCC Lattice
#
#    1 - Special case, must be followed by string on next line. This
#        string must be lower case, so the same string in capitals is
#        reserved as an input flag for information about the special
#        case. Options:
#
#            - dense_fene     connect monomers on an FCC lattice
#                             with a specified chain length and 
#                             FENE potential parameters. 
#
#            - sparse_fene    connect monomers on a cubic lattice
#                             separated by FENE equilibrium distance.    
#
#    2 - Configuration file, like a *.pdb. To be developed.
#
# -----------------------------------------------------------------------
INITIAL_CONFIG_FLAG
0
special_case_name

#########################################################################
# Sparse FENE special case info: designed for cases where the density
# is lower than the density at which the average separation between
# monomers on an FCC lattice is greater than the FENE maximum bond 
# elongation.
#
#	- number of LJ beads for each polymer chain (nmonomers)
#	- spring constant, k_c
#	- maximum spring elongation
#   - domain length in x
#   - domain length in y
#   - domain length in z
#   - nchains
# -----------------------------------------------------------------------
SPARSE_FENE
20
30.0
1.5
15.0
10.0
10.0
4

#########################################################################
# Dense FENE special case information
#
#	- number of LJ beads for each polymer chain (nmonomers)
#	- spring constant, k_c
#	- maximum spring elongation
#   - monomer density
#   - FCC (4 monomer) units in x
#   - FCC (4 monomer) units in y
#   - FCC (4 monomer) units in z
# -----------------------------------------------------------------------
DENSE_FENE
8
30.0
1.5
1.1
8
8
8

#########################################################################
# Number of unit cells in the x,y,z directions, formatted:
#	x
#	y
#	z	
# -----------------------------------------------------------------------
INITIALNUNITS
8
8
8

#########################################################################
# Total number of timesteps:
# -----------------------------------------------------------------------
NSTEPS
1000


#########################################################################
# Results are recorded periodically every TPLOT timesteps:
#	(subroutine simulation_record is called)
# -----------------------------------------------------------------------
TPLOT
100

#########################################################################
# Timestep interval:
# -----------------------------------------------------------------------
DELTA_T
0.005

#########################################################################
# Integration algorithm
# 0: Leap-frog Verlet
# 1: Velocity Verlet
# 2: Other
# -----------------------------------------------------------------------
INTEGRATION_ALGORITHM
0

#########################################################################
# Force list used
# 0: All Pairs
# 1: Cell List
# 2: Neighbour list with all interactions
# 3: Neighbour list using 3rd law optimisation (half interactions)
# -----------------------------------------------------------------------
FORCE_LIST
3

#########################################################################
# Extra distance added to r_cutoff to determine neighbour cell size
# -----------------------------------------------------------------------
DELTA_RNEIGHBR
0.3


#########################################################################
# Frequency (in seconds) to write rescue snapshot 'final_state' file
# -----------------------------------------------------------------------
RESCUE_SNAPSHOT_FREQ
21600

#########################################################################
# Fixed rebuild flag
# 0: off - use delta_rneighbr to calculate rebuild
# 1: on using frequency specifed on next line
# -----------------------------------------------------------------------
FIXED_REBUILD_FLAG
0
20

#########################################################################
# Sorting parameters - sorts molecules every rebuild*sort_freq
# Sort_Flag:  		0 - No sorting
# 		 	  		1 - Sequential cell-block based Sorting
# 		 	  		2 - 3D Hilbert Curve cell-block based sorting
# sort_freq:		1 sorts every rebuild 
# cell-block size:	1 is sort cell by cell, 3 uses the 27 block used in
#					force calculation and seems to give good performance
# Notes: large systems and long times will generally benifit most from
# sorting algorithm - use script based tuning for your case
# -----------------------------------------------------------------------
SORT_FLAG
2
1
3


#########################################################################
# Ensemble selector: case sensitive! (currently only developed for VV)
# 0 - NVE
# 1 - NVT (Nosé-Hoover thermostat)
# 2 - NVT (Gaussian iso-kinetic thermostat) - only availble with VV
# 3 - NVT (Profile unbiased Nosé-Hoover thermostat)
# 4 - NVT (Pairwise additive Nosé-Hoover thermostat 
#                   by Allen & Schmid)
# 5 - NVT (DPD thermostat by Soddemann)
# 6 - Tagged Move System
# -----------------------------------------------------------------------
ENSEMBLE
0

#########################################################################
# Periodic boundary flags, formatted:
#	x
#	y
#	z
#
#	Constraint must be put in place before periodic BC are turned off!
#	
#	0 - off
#	1 - periodic
#	2 - Lees-Edwards shearing BC
#
#	Note: currently, only the boundary in the y direction may be sheared.
# -----------------------------------------------------------------------
PERIODIC
1
1
1

#########################################################################
# Boundary force flag and distances, formatted:
#   bforce_flag(1) (x direction, bottom)           (integer)
#   bforce_flag(2) (x direction, top)              (integer)
#   bforce_flag(3) (y direction, bottom)           (integer)
#   bforce_flag(4) (y direction, top)              (integer)
#   bforce_flag(5) (z direction, bottom)           (integer)
#   bforce_flag(6) (z direction, top)              (integer)
#   bforce_dxyz(1) (x distance, bottom)            (real)
#   bforce_dxyz(2) (x distance, top)               (real)
#   bforce_dxyz(3) (y distance, bottom)            (real)
#   bforce_dxyz(4) (y distance, top)               (real)
#   bforce_dxyz(5) (z distance, bottom)            (real)
#   bforce_dxyz(6) (z distance, top)               (real)
#
# If periodic boundaries in x, y or z directions are turned off, the
# option to apply a boundary force to keep molecules within the domain
# is provided via the bforce flag. Choose from the following in each
# direction:
#
#    0 = off 
#    1 = O'Connell & Thompson     1995  (Phys. Rev. E 52, 5792)
#    2 = Nie, Chen, E & Robbins   2003  (JFM 500 pp. 55-64)
#    3 = Flekkøy, Wagner & Feder  2000  (Europhys. Lett. 52 3, p271)
#
# bforce_dxyz defines the distance from each edge of the domain beyond 
# which any particle will no longer feel the effect of the boundary 
# force. Low values correspond to hard walls, while larger values will
# make the boundaries softer.
# -----------------------------------------------------------------------
BFORCE
0
0
0
0
0
0
0.0
0.0
0.0
0.0
0.0
0.0

#########################################################################
# Shear definition, formatted:
#	shear direction (i.e. 1 for x direction, -2 for negative y direction)
#	shear iter0
#	velocity or rate flag: 0-velocity, 1-rate
#	velocity or rate numerical value
# -----------------------------------------------------------------------
DEFINE_SHEAR
1
0
0
1.0

#########################################################################
# Potential flag:
#	0 - Lennard-Jones
#	1 - FENE spring polymer potentials
# -----------------------------------------------------------------------
POTENTIAL_FLAG
0

#########################################################################
# Parameters of the FENE potential, formatted:
#	number of LJ beads for each polymer chain
#	spring constant, k_c
#	maximum spring elongation
# -----------------------------------------------------------------------
FENE_INFO
8
30.0
1.5

#########################################################################
# Solvent information:
#	- flag
#		> 0 - Polymer only
#		> 1 - Polymer in theta solvent
#		> 2 - Solvent of variable quality (Soddemann)
#	- solvent ratio (integer): number of solvent molecules per FENE
#                              monomer.
#	- solvent energy parameter eps_pp (polymer-polymer)
#	- solvent energy parameter eps_ps (polymer-solvent)
#	- solvent energy parameter eps_ss (solvent-solvent)
# -----------------------------------------------------------------------
SOLVENT_INFO
0
0
0.0
0.0
0.0

#########################################################################
# Random number seeds, formattted:
#	seed1
#	seed2
#	
# If seed1 and seed2 are the same, the seed generation will be
# automatically randomised by the main program.
# -----------------------------------------------------------------------
SEED
1
2

########################################################################
# Velocity of sliding molecules in wall
# ----------------------------------------------------------------------
WALLSLIDEV
0.0
0.0
0.0

########################################################################
# Distance from domain bottom to apply sliding velocity to molecules 
# where applied velocity v=WALLSLIDEV
# ----------------------------------------------------------------------
SLIDEDISTBOTTOM
0.0
0.0
0.0

########################################################################
# Distance from domain top to apply sliding velocity to molecules 
# where applied velocity v=WALLSLIDEV
# ----------------------------------------------------------------------
SLIDEDISTTOP
0.0
0.0
0.0

########################################################################
# Distance from domain bottom to Fix molecules, i.e. v=0 unless sliding
# ----------------------------------------------------------------------
FIXDISTBOTTOM
0.0
0.0
0.0

########################################################################
# Distance from domain top to Fix molecules, i.e. v=0 unless sliding
# ----------------------------------------------------------------------
FIXDISTTOP
0.0
0.0
0.0

########################################################################
# Distance from domain bottom to tethered molecules using spring like
# restoring forces with potential equation phi= -k4*rio^4 - k6*rio^6
# strength of tethering potential from Petravic and Harrowell 
# with constants (k4 = 5,000, k6 = 5,000,000)
# ----------------------------------------------------------------------
TETHEREDDISTBOTTOM
0.0
0.0
0.0

########################################################################
# Distance from domain top to tethered molecules using spring like
# restoring forces with potential equation phi= -k4*rio^4 - k6*rio^6
# strength of tethering potential from Petravic and Harrowell 
# with constants (k4 = 5,000, k6 = 5,000,000)
# ----------------------------------------------------------------------
TETHEREDDISTTOP
0.0
0.0
0.0

#########################################################################
# Thermostat flag:
# 0 - off, 1 - all, 2 - all (PUT), 3 - selection (must also specify 
#													THERMSTATTOP and/or
#												 	 THERMSTATBOTTOM)
# -----------------------------------------------------------------------
THERMSTAT_FLAG
0

########################################################################
# Distance from domain bottom to apply thermostat 
# ----------------------------------------------------------------------
THERMSTATBOTTOM
0.0
0.0
0.0

########################################################################
# Distance from domain top to apply thermostat 
# ----------------------------------------------------------------------
THERMSTATTOP
0.0
0.0
0.0

#########################################################################
# MPI topology
#   npx 
#   npy
#   npz
#
# if npz = 0 it will be set to nproc/(npx*npy)
#
# constrain: npx*npy*npz = nproc 
# nproc is set by the argument of mpirun
#-----------------------------------------------------------------------
PROCESSORS
1 
1
1

#------------------------------------------------------------------------
#########################################################################

	 #######  ##     ## ######## ########  ##     ## ######## 
	##     ## ##     ##    ##    ##     ## ##     ##    ##    
	##     ## ##     ##    ##    ##     ## ##     ##    ##    
	##     ## ##     ##    ##    ########  ##     ##    ##    
	##     ## ##     ##    ##    ##        ##     ##    ##    
	##     ## ##     ##    ##    ##        ##     ##    ##    
	 #######   #######     ##    ##         #######     ##    

#########################################################################
#------------------------------------------------------------------------

#########################################################################
# Output flag for visualisation in VMD:
#	Flag: 	0-off, 
#			1-homogeneous, 
#			2-solid/liquid,
#	      	3-homogeneous+halos, 
#			4-"true" unwrapped positions
#	Number of intervals: 0-all, 1 to 20-specified in csv format below
#						20 or more-all
#	Intervals: start and finish iteration of each interval in format
#	       start_1, finish_1, start_2, finish_2, etc, etc
# -----------------------------------------------------------------------
VMD_OUTFLAG
0
0
0, 100, 200, 300, 310, 431, 600, 700, 900, 970, 980, 1000

#########################################################################
# Output flag for macroscopic properties:
#	0 - off
#	1 - high precision > stdout
#	2 - high precision > stdout + results/macroscopic_properties
#	3 - concise        > stdout
#	4 - concise        > stdout + results/macroscopic_properties
# -----------------------------------------------------------------------
MACRO_OUTFLAG
1

#########################################################################
# Output flag for mass record:
#	output_flag (0=off 1,2,3=x,y,z slice 4=3D bins)
#	No. of samples for mass average
# -----------------------------------------------------------------------
MASS_OUTFLAG
0
100

#########################################################################
# Output flag for Velocity record:
#	output_flag (0=off 1,2,3=x,y,z slice 4=3D bins)
#	No. of samples for velocity average
# -----------------------------------------------------------------------
VELOCITY_OUTFLAG
0
100

#########################################################################
# Output flag for Pressure binning:
#	output_flag (0=off 1=virial 2=Volume Averaged)
#	No. of samples for pressure average (number of viscosity bins)
#   Seperate kinetic and configurational 0 = together 1=seperate
# -----------------------------------------------------------------------
PRESSURE_OUTFLAG
0
100

#########################################################################
# Output flag for viscosity:
#	output_flag (0=off 1=virial 2=Volume Averaged)
#	No. of Steps to average viscosity sample bins over 
#
# Note that Visc output freq = (PRESSURE_visc_bins*visc_ave_steps)
# -----------------------------------------------------------------------
VISCOSITY_OUTFLAG
0
100

#########################################################################
# Control Volume Conservation Averaging
#	CV Conservation averaging (0=off 1=on) - take mass, momentum or 
#	energy flux measure every step to ensureflux will be equal to change 
#	in snapshots. Note, this increases computational cost somewhat
#
# -----------------------------------------------------------------------
CV_CONSERVE
1

#########################################################################
# Output flag for mass flux:
#	output_flag (0=off 1=3D CV)
#	No. of samples for mass flux & interval for CV mass snapshot
#
# -----------------------------------------------------------------------
MFLUX_OUTFLAG
0
1

#########################################################################
# Output flag for velocity flux:
#	output_flag (0=off 1,2,3=x,y,z MOP 4=3D CV)
#	No. of samples for momentum flux/pressure & CV momentum snapshots
#
# -----------------------------------------------------------------------
VFLUX_OUTFLAG
0
1

#########################################################################
# Output flag for energy flux:
#	output_flag (0=off 1,2,3=x,y,z MOP 4=3D CV)
#	No. of samples for energy flux/power & CV energy snapshots
#
# -----------------------------------------------------------------------
EFLUX_OUTFLAG
0
100

#########################################################################
# Output flag for end-to-end vector time correlation function (etevtcf):
#	- flag:
#	    > 0 - off
#	    > 1 - on-the-fly calculation, printed to terminal
#	    > 2 - write entire history of vectors so that t.c.f. may
#	          be calculated with a post-processing routine (fft).
#
#	- iteration at which to begin averaging (must be "hit" by a tplot, 
#	  otherwise etev_0 will not be initialised and the t.c.f. will be
#	  incorrectly calculated.)
# -----------------------------------------------------------------------
ETEVTCF_OUTFLAG
0
0

#########################################################################
# Radius of gyration output flag:
#	- flag:
#		> 0 - off
#		> 1 - on
#		> 2 - on + output file
#	- iteration at which to begin averaging (must be "hit" by a tplot, 
#	  otherwise etev_0 will not be initialised and the t.c.f. will be
#	  incorrectly calculated.)
# -----------------------------------------------------------------------
R_GYRATION_OUTFLAG
0
0

#########################################################################
# Radial distribution output flag
#	- flag: 
#		> 0 - off
#		> 1 - on (1D, spherical)
#		> 2 - on (3D, cartesian)
#	- maximum radius for the calculation of g(r)
#	- number of radial "shells" or "bins"
# -----------------------------------------------------------------------
RDF_OUTFLAG
0
3.5
100

#########################################################################
# Static structure factor output flag
#	- flag: 
#		> 0 - off
#		> 1 - on
#	- projection axis 1 (x=1,y=2,z=3)
#   - projection axis 2 (x=1,y=2,z=3)
#	- maximum wavenumber n, where k = 2*pi*n/domain
# -----------------------------------------------------------------------
STRUCT_OUTFLAG
0
1
2
50
