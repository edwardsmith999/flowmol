import "1beadProtSci2010.lt"

using namespace 1beadProtSci2010

prot = new 4HelixBundle

write_once("Data Boundary") {
  0 100  xlo xhi
  0 100  ylo yhi
  0 100  zlo zhi
}




#       ------------ Note: -------------
#
# If you want to try the version using "CHARMM" dihedrals, import this instead:
#
# import "versions_with_comments/1beadProtSci2010_charmm.lt"
#
# (The two versions should behave identically.  However by overlaying 
#  dihedral interactions on top of eachother, charmm allows you to construct
#  a Fourier series with an arbitrary number of terms.  Class2 stops at 3.
#  This is useful if one day you want to use a more complex dihedral potential.)
