#=======================================================================
# User definitions
#=======================================================================
# This make file compiles the code on ALC in two scenerios
# Does not mean the generated (a.out) will execute or is correct,
# but at least the code compiles.
# case (1)
#	LIBS =  -lmkl -lmkl_p4 -lmkl_def -lmpi  -lfmpi        -lelan -lelan3 -lrmscall
#	LD = mpiifc  -L/usr/local/intel/mkl60/lib/32 -r8 -openmp
# case (2)
#	LIBS =  -lmkl                    -lmpi  -lfmpi        -lelan -lelan3 -lrmscall
#	LD = mpiifc  -L/usr/local/intel/mkl60/lib/32 -r8
#

NAME = blayer

F90FILES = data.export_planes.f90 mesh.export.f90 arrayzero.f90 main.f90 messenger.MPI.noglobal_planes.f90 data.noglobal_planes.f90 simulation.f90 mesh.f90 subMesh.f90 Input_mod.Z_planes.ALC.f90 Output_mod.Z_planes.ALC.f90 advance_quick_Fletcher.f90 invert_sgi_openmp.f90 mtgcoeff_planes.f90  poisson_newmtg_planes.sgi.f90  new_multigrid_planes.f90 projection_step.f90 boundaries.blayer.f90 inflow.f90 outflow.f90 fluctuations.f90 rk4_blasius.f90 misc.mpi.f90 FST_CODES/freestream_uvwhat_J_k12.f90 FST_CODES/freestream_base_OS_J_ORIG.f90 FST_CODES/eigenfunctions_OS_J_ORIG.f90 FST_CODES/eigenfunctions_SQ.f90 grid.f90 CFLcontrol.f90 copyBC.f90 orrsommerfeld.f90 flowAnalysis_fskan.f90 statistics.f90 Input_Spectra.ALC.f90 Output_Spectra.ALC.f90 Falkner_Skan.f90 Input_Stats.ALC.f90 Output_Stats.ALC.f90

LIBFILES = $(HOME)/lib/archive.o $(HOME)/lib/library.o $(HOME)/lib/library.alc.o $(HOME)/lib/SSDfile.memory.o $(HOME)/lib/triDiagonal.o $(HOME)/lib/triDiagonal.mpi.o $(HOME)/lib/pentaDiagonal.o $(HOME)/lib/transforms.mkl_intel.alc.o $(HOME)/lib/SinCosFFT.o $(HOME)/lib/triDiagonal.mrhs.o $(HOME)/lib/triDiagonal.mpi.mrhs.o $(HOME)/lib/pentaDiagonal.mrhs.o $(HOME)/lib/pentaDiagonal.mpi.o $(HOME)/lib/polyDiagonal.o $(HOME)/lib/mpic_wrappers.o

LIBS =  -lmkl -lmkl_p4 -lmkl_def -lfmpi -lmpi  -lmpio -lelan -lelan3
LIBS =  -lmkl -lmkl_p4 -lmkl_def -lmpi  -lfmpi        -lelan -lelan3 -lrmscall

FLAGS = $(MPI_COMPILE_FLAGS)
F77FILES = 
CFILES = 

#=======================================================================
# Standard definitions
#
OFILES = $(F90FILES:.f90=.o) $(F77FILES:.f=.o) $(CFILES:.c=.o)

# SGI compilers
# F90 = mpiifc -stack_temps -cm -w95 -r8
F90 = mpiifc -cm -w95 -r8
F77 = f77
CC = icc
# LD = mpiifc  -stack_temps -L/usr/local/intel/mkl60/lib/32 -r8 -openmp
LD = mpiifc  -L/usr/local/intel/mkl60/lib/32 -r8 -openmp

VPATH = obj
.SUFFIXES:
.SUFFIXES: .out .o .f90 .f .c .inc .h

#=======================================================================
# Targets and dependencies
#
default:: opt
all:: a.out
debug:
	@make opt "FLAGS = -g $(FLAGS)"
prof:
	@make opt "LIBS = $(LIBS) -p"
opt:
	@make all "FLAGS = -O2 $(FLAGS)"
clean:
	rm -rf obj a.out *.mod
a.out: obj $(OFILES)
	@echo "$(LD) $(OFILES) $(LIBFILES) $(LIBS) $(MPI_LD_FLAGS)"
	@cd obj; $(LD) $(OFILES) $(LIBFILES) $(LIBS) $(MPI_LD_FLAGS); mv a.out ..
obj:
	mkdir obj
	mkdir obj/FST_CODES

#=======================================================================
# Compilation rules
#
.f90.o:
	$(F90) $(FLAGS) -c $*.f90 -o obj/$*.o
.f.o:
	$(F77) $(FLAGS) -c $*.f -o obj/$*.o
.c.o:
	$(CC) $(FLAGS) -c $*.c -o obj/$*.o

