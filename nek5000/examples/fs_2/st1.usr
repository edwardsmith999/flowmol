c-----------------------------------------------------------------------
c
c     Setup for 2D free-surface standing wave problem
c
c     Re = 3.e4
c
c     We =  0.011269332539972
c
c     Fr = 0.091827364554637
c
c
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      udiff =0.
      utrans=0.

      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,ieg)

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      common /fsparam/ eps,alpha,Re,Pg,We,gamma_r,gamma_i

      ffx = 0.0
      ffy = -(Re*Pg)**(-2)
      ffy = -1
      ffz = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
C
      qvol   = 0.0
      source = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'
      common /outputs/ vol0,ymx0,vy20,vy2l
      common /fsarray/ ub(lx1,ly1,lz1,lelt),vb(lx1,ly1,lz1,lelt)
      common /fsparam/ eps,alpha,Re,Pg,We,gamma_r,gamma_i
      real dtmax
      save dtmax

      n = nx1*ny1*nz1*nelv
      vol = glsum(bm1,n)
      vy2 = glsc3(vy,bm1,vy,n)/vol
      if (vy2.gt.0) vy2 = sqrt(vy2)
      ymx = glmax(ym1,n)
   
c
c     Target error values for ge are asympotically ~ 1.e-4
c

      if (istep.eq.0) then
         vol0 = vol
         ymx0 = ymx
         vy20 = vy2
      else
         volr = vol/vol0
         ymxr = ymx/ymx0
         vy2l = vy2/vy2l
         if (nid.eq.0) write(6,1) istep,time,ymx,vy2,ymxr
    1    format(i5,1p4e14.6,' amp')
      endif
      vy2l = vy2

c     if (istep.eq.0) dtmax = abs(param(12)) ! small steps at start
c     if (istep.eq.0) dt = dtmax/100.
c     dt = dt*1.01
c     dt = min(dtmax,dt)
c     param(12) = -dt

      param(93) = 0      ! no projection for free-surface
      param(94) = 0      ! no velocity projection for free-surface
      param(95) = 0      ! no pressure projection for free-surface
      
      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      common /fsparam/ eps,alpha,Re,Pg,We,gamma_r,gamma_i

      ux=0.0
      uy=0.0
      uz=0.0
      temp=0.0

      sigma = We  ! surface tension = Weber number

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      common /fsarray/ ub(lx1,ly1,lz1,lelt),vb(lx1,ly1,lz1,lelt)
      integer e,eg

      ux=0.0
      uy=0.0
      uz=0.0
      temp=0

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      include 'ZPER'   ! nelx,nely for quickmv
      include 'CTIMER' ! icalld

      common /fsparam/ eps,alpha,Re,Pg,We,gamma_r,gamma_i
      common /xyorig/  xo(lx1*ly1*lz1*lelt),yo(lx1*ly1*lz1*lelt)
      character*3 cb
      integer e,eg,ex,ey,ez

      nelx = 6
      nely = 6

c     param(66) = 4    ! std nek5000 output
c     param(67) = 4

      Re         = 3.e4             ! hard-code Reynolds number
      visc       = 1/Re
      param(2)   = visc
      cpfld(1,1) = visc 
      cpfld(1,2) = 1.0   ! density 

      Pg       = 1.1e-4             ! Gravitational Peclet number
      We       =  0.011269332539972
      eps      = param(75)          ! Perturbation amplitude
      eps      = 0.3                ! Perturbation amplitude

      one = 1.
      pi  = 4.*atan(one)
      x0  = 0.
      x1  = 2*pi
      call rescale_x (xm1,x0,x1)   ! x on [0,2pi]
      y0  = -1
      y1  = 0.
      call rescale_x (ym1,y0,y1)   ! y on [-1,0]

      n = nx1*ny1*nz1*nelv

      icalld = icalld+1

      do i=1,n   ! perurbation displacement
         x  = xm1(i,1,1,1)
         y  = ym1(i,1,1,1)
         disp = cos(x)
         yscl = 1+y   !  zero when y=-1, 1 when y = 0
         ym1(i,1,1,1) = y + eps*yscl*disp
      enddo
      param(59) = 1   ! force std operator evaluation for deformed geometry

c     Set surface tension on free surface

      sigma = We  ! must be set in userbc for cb = 'ms '

      itop = 3
      if (if3d) itop = 5
      do e=1,nelv
         cb = cbc(itop,e,1) ! bc on top surface
         if (cb.eq.'MS ') bc(4,itop,e,1) = sigma
      enddo

      return
      end
c-----------------------------------------------------------------------
